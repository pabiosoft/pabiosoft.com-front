{"ast":null,"code":"import { BehaviorSubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nexport class SidebarService {\n  constructor() {\n    this.sidebarOpen = new BehaviorSubject(false);\n    this.sidebarOpen$ = this.sidebarOpen.asObservable();\n  }\n  toggleSidebar() {\n    this.sidebarOpen.next(!this.sidebarOpen.value);\n  }\n  closeSidebar() {\n    this.sidebarOpen.next(false);\n  }\n  static {\n    this.ɵfac = function SidebarService_Factory(t) {\n      return new (t || SidebarService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: SidebarService,\n      factory: SidebarService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","SidebarService","constructor","sidebarOpen","sidebarOpen$","asObservable","toggleSidebar","next","value","closeSidebar","factory","ɵfac","providedIn"],"sources":["/Users/pabios/Documents/Github/Pabiosoft/pabiosof.com-front/src/app/core/services/sidebar.service.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {BehaviorSubject} from \"rxjs\";\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SidebarService{\n    private sidebarOpen = new BehaviorSubject<boolean>(false);\n    sidebarOpen$ = this.sidebarOpen.asObservable();\n\n    toggleSidebar(){\n        this.sidebarOpen.next(!this.sidebarOpen.value)\n    }\n\n    closeSidebar(){\n        this.sidebarOpen.next(false);\n    }\n\n\n}\n"],"mappings":"AACA,SAAQA,eAAe,QAAO,MAAM;;AAMpC,OAAM,MAAOC,cAAc;EAH3BC,YAAA;IAIY,KAAAC,WAAW,GAAG,IAAIH,eAAe,CAAU,KAAK,CAAC;IACzD,KAAAI,YAAY,GAAG,IAAI,CAACD,WAAW,CAACE,YAAY,EAAE;;EAE9CC,aAAaA,CAAA;IACT,IAAI,CAACH,WAAW,CAACI,IAAI,CAAC,CAAC,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;EAClD;EAEAC,YAAYA,CAAA;IACR,IAAI,CAACN,WAAW,CAACI,IAAI,CAAC,KAAK,CAAC;EAChC;;;uBAVSN,cAAc;IAAA;EAAA;;;aAAdA,cAAc;MAAAS,OAAA,EAAdT,cAAc,CAAAU,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}